{"__symbolic":"module","version":4,"exports":[{"export":[{"name":"CropperPosition","as":"CropperPosition"}],"from":"./lib/image-crop/cropper-position.interface"},{"export":[{"name":"Dimensions","as":"Dimensions"}],"from":"./lib/image-crop/dimensions.interface"},{"export":[{"name":"ImageCroppedEvent","as":"ImageCroppedEvent"}],"from":"./lib/image-crop/image-cropped-event.interface"},{"export":[{"name":"MoveStart","as":"MoveStart"}],"from":"./lib/image-crop/move-start.interface"},{"export":[{"name":"ImageTransform","as":"ImageTransform"}],"from":"./lib/image-crop/image-transform.interface"}],"metadata":{"FormBuilderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":167,"character":1},"arguments":[{"selector":"asw-form-builder","template":"<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-right\">\r\n                <button mat-raised-button \r\n                        type=\"button\"\r\n                        class=\"btn btn-default btn-sm\"\r\n                        (click)=\"previewTemplate()\">Preview</button>\r\n                <button mat-raised-button \r\n                        type=\"button\" \r\n                        class=\"btn btn-info btn-sm\"\r\n                        (click)=\"previewJsonData()\">Json Data</button>\r\n                <button mat-raised-button \r\n                        class=\"btn btn-primary btn-sm\"\r\n                        (click)=\"publishTemplate()\">Publish</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" cdkDropListGroup>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Controls</h4>\r\n                        <div cdkDropList\r\n                            [cdkDropListData]=\"availableControls\"\r\n                            class=\"asw-list\">\r\n                            <div class=\"asw-box\" *ngFor=\"let item of availableControls\" cdkDrag>\r\n                                <mat-icon aria-hidden=\"false\">{{item.icon}}</mat-icon>\r\n                                {{item.displayName}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-9\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">Drop Area</h4>\r\n                        <div\r\n                            cdkDropList\r\n                            [cdkDropListData]=\"formContainer\"\r\n                            class=\"asw-list\"\r\n                            (cdkDropListDropped)=\"drop($event)\">\r\n                            <div *ngFor=\"let control of formContainer; let i = index\" class=\"asw-box\" cdkDrag>\r\n                                <div [ngSwitch]=\"control.controlType\" class=\"asw-full-width\">\r\n                                    <div *ngSwitchCase=\"'autocomplete'\">\r\n                                        <asw-autocomplete [control]=\"control\"\r\n                                                          [controlIndex]=\"i\"\r\n                                                          (autocompleteUpdateEvent)=\"updatedControl($event)\"\r\n                                                          (autocompleteDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-autocomplete>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'header'\">\r\n                                        <asw-header [control]=\"control\"\r\n                                                    [controlIndex]=\"i\"\r\n                                                    (headerUpdateEvent)=\"updatedControl($event)\"\r\n                                                    (headerDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-header>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'image'\">\r\n                                        <asw-image [control]=\"control\"\r\n                                                    [controlIndex]=\"i\"\r\n                                                    (imageUpdateEvent)=\"updatedControl($event)\"\r\n                                                    (imageDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-image>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'textbox'\">\r\n                                        <asw-text-box [control]=\"control\"\r\n                                                      [controlIndex]=\"i\"\r\n                                                      (textboxUpdateEvent)=\"updatedControl($event)\"\r\n                                                      (textboxDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-text-box>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'textarea'\">\r\n                                        <asw-text-area [control]=\"control\"\r\n                                                       [controlIndex]=\"i\"\r\n                                                       (textAreaUpdateEvent)=\"updatedControl($event)\"\r\n                                                       (textAreaDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-text-area>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'select'\">\r\n                                        <asw-select [control]=\"control\"\r\n                                                    [controlIndex]=\"i\"\r\n                                                    (selectUpdateEvent)=\"updatedControl($event)\"\r\n                                                    (selectDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-select>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'multi-select'\">\r\n                                        <asw-multi-select [control]=\"control\"\r\n                                                          [controlIndex]=\"i\"\r\n                                                          (multiSelectUpdateEvent)=\"updatedControl($event)\"\r\n                                                          (multiSelectDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-multi-select>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'radio'\">\r\n                                        <asw-radio-button [control]=\"control\"\r\n                                                          [controlIndex]=\"i\"\r\n                                                          (radioButtonUpdateEvent)=\"updatedControl($event)\"\r\n                                                          (radioButtonDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-radio-button>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'checkbox'\">\r\n                                        <asw-checkbox [control]=\"control\"\r\n                                                      [controlIndex]=\"i\"\r\n                                                      (checkboxUpdateEvent)=\"updatedControl($event)\"\r\n                                                      (checkboxDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-checkbox>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'datepicker'\">\r\n                                        <asw-datepicker [control]=\"control\"\r\n                                                        [controlIndex]=\"i\"\r\n                                                        (datepickerUpdateEvent)=\"updatedControl($event)\"\r\n                                                        (datepickerDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-datepicker>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'button'\">\r\n                                        <asw-button [control]=\"control\"\r\n                                                    [controlIndex]=\"i\"\r\n                                                    (buttonUpdateEvent)=\"updatedControl($event)\"\r\n                                                    (buttonDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-button>                                       \r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'paragraph'\">\r\n                                        <asw-paragraph [control]=\"control\"\r\n                                                    [controlIndex]=\"i\"\r\n                                                    (paragraphUpdateEvent)=\"updatedControl($event)\"\r\n                                                    (paragraphDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-paragraph>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'divider'\">\r\n                                        <asw-divider [control]=\"control\"\r\n                                                     [controlIndex]=\"i\"\r\n                                                     (dividerDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-divider>\r\n                                    </div>\r\n                                    <div *ngSwitchCase=\"'slide-toggle'\">\r\n                                        <asw-slide-toggle [control]=\"control\"\r\n                                                          [controlIndex]=\"i\"\r\n                                                          (slidetoggleUpdateEvent)=\"updatedControl($event)\"\r\n                                                          (slidetoggleDeleteEvent)=\"deleteControl($event)\">\r\n                                        </asw-slide-toggle>                                       \r\n                                    </div>                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","styles":[".asw-list{background:#fff;border:1px solid #ccc;border-radius:4px;display:block;min-height:630px;overflow:hidden}.asw-box{align-items:center;background:#fff;border-bottom:1px solid #ccc;box-sizing:border-box;color:rgba(0,0,0,.87);cursor:move;flex-direction:row;font-size:14px;justify-content:space-between;padding:10px}.cdk-drag-preview{border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-sizing:border-box}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.asw-box:last-child{border:none}.asw-list.cdk-drop-list-dragging .asw-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.asw-horizontal-list{border:1px solid #ccc;border-radius:4px;max-width:100%;min-height:60px;overflow:hidden;width:1000px}.asw-horizontal-box,.asw-horizontal-list{background:#fff;display:flex;flex-direction:row}.asw-horizontal-box{align-items:center;border-right:1px solid #ccc;box-sizing:border-box;color:rgba(0,0,0,.87);cursor:move;flex-basis:0;flex-grow:1;font-size:14px;justify-content:space-between;padding:20px 10px}.asw-radio-group{display:flex;flex-direction:column;margin:15px 0}.asw-radio-button{margin:5px}.mat-form-field{display:block!important}"]}]}],"members":{"previewClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":177,"character":2}}]}],"publishClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":178,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":180,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}],"gridDrop":[{"__symbolic":"method"}],"updatedControl":[{"__symbolic":"method"}],"deleteControl":[{"__symbolic":"method"}],"previewTemplate":[{"__symbolic":"method"}],"previewJsonData":[{"__symbolic":"method"}],"publishTemplate":[{"__symbolic":"method"}]}},"FormBuilderModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":11,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"FormBuilderComponent"},{"__symbolic":"reference","name":"ɵa"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":20,"character":4},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵr"}],"exports":[{"__symbolic":"reference","name":"FormBuilderComponent"}]}]}],"members":{}},"PreviewTemplateComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"asw-preview-template","template":"<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-right\">\r\n                <button mat-raised-button \r\n                        type=\"button\"\r\n                        class=\"btn btn-default btn-sm\">Download Pdf\r\n                </button>                \r\n            </div>\r\n        </div>\r\n        <div class=\"row\">            \r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div *ngFor=\"let control of formContainer; let i = index\">\r\n                            <div [ngSwitch]=\"control.controlType\" class=\"asw-full-width\">                                    \r\n                                <div *ngSwitchCase=\"'autocomplete'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-autocomplete [control]=\"control\"\r\n                                                                [controlIndex]=\"i\"\r\n                                                                [isPreviewTemplate]=\"false\">\r\n                                            </asw-autocomplete>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'header'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-header [control]=\"control\"\r\n                                                        [controlIndex]=\"i\"\r\n                                                        [isPreviewTemplate]=\"false\">\r\n                                            </asw-header>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'image'\">\r\n                                    <asw-image [control]=\"control\"\r\n                                                [controlIndex]=\"i\"\r\n                                                [isPreviewTemplate]=\"false\">\r\n                                    </asw-image>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'textbox'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-text-box [control]=\"control\"\r\n                                                            [controlIndex]=\"i\"\r\n                                                            [isPreviewTemplate]=\"false\">\r\n                                            </asw-text-box>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'textarea'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-text-area [control]=\"control\"\r\n                                                            [controlIndex]=\"i\"\r\n                                                            [isPreviewTemplate]=\"false\">\r\n                                            </asw-text-area>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'select'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-select [control]=\"control\"\r\n                                                        [controlIndex]=\"i\"\r\n                                                        [isPreviewTemplate]=\"false\">\r\n                                            </asw-select>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'multi-select'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-multi-select [control]=\"control\"\r\n                                                                [controlIndex]=\"i\"\r\n                                                                [isPreviewTemplate]=\"false\">\r\n                                            </asw-multi-select>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'radio'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-radio-button [control]=\"control\"\r\n                                                                [controlIndex]=\"i\"\r\n                                                                [isPreviewTemplate]=\"false\">\r\n                                            </asw-radio-button>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'checkbox'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-checkbox [control]=\"control\"\r\n                                                            [controlIndex]=\"i\"\r\n                                                            [isPreviewTemplate]=\"false\">\r\n                                            </asw-checkbox>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'datepicker'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-datepicker [control]=\"control\"\r\n                                                            [controlIndex]=\"i\"\r\n                                                            [isPreviewTemplate]=\"false\">\r\n                                            </asw-datepicker>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'button'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-button [control]=\"control\"\r\n                                                        [controlIndex]=\"i\"\r\n                                                        [isPreviewTemplate]=\"false\">\r\n                                            </asw-button>                                                \r\n                                        </div>\r\n                                    </div>                                       \r\n                                </div>\r\n                                <div *ngSwitchCase=\"'paragraph'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-paragraph [control]=\"control\"\r\n                                                            [controlIndex]=\"i\"\r\n                                                            [isPreviewTemplate]=\"false\">\r\n                                            </asw-paragraph>                                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'divider'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-divider [control]=\"control\"\r\n                                                        [controlIndex]=\"i\"\r\n                                                        [isPreviewTemplate]=\"false\">\r\n                                            </asw-divider>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'slide-toggle'\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <asw-slide-toggle [control]=\"control\"\r\n                                                                [controlIndex]=\"i\"\r\n                                                                [isPreviewTemplate]=\"false\">\r\n                                            </asw-slide-toggle>                                                  \r\n                                        </div>\r\n                                    </div>                                     \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"}]}],"members":{"formContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":2}}]}]}},"PreviewTemplateModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"PreviewTemplateComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":17,"character":4},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"}],"exports":[{"__symbolic":"reference","name":"PreviewTemplateComponent"}]}]}],"members":{}},"ImageCropModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":9,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":10,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":11,"character":8}],"declarations":[{"__symbolic":"reference","name":"ImageCropComponent"}],"exports":[{"__symbolic":"reference","name":"ImageCropComponent"}]}]}],"members":{}},"ImageCropComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"asw-image-crop","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":18,"character":19},"member":"OnPush"},"template":"<div [style.background]=\"imageVisible && backgroundColor\"\r\n    #wrapper>\r\n    <img\r\n    #sourceImage\r\n    class=\"source-image\"\r\n    *ngIf=\"safeImgDataUrl\"\r\n    [src]=\"safeImgDataUrl\"\r\n    [style.visibility]=\"imageVisible ? 'visible' : 'hidden'\"\r\n    [style.transform]=\"safeTransformStyle\"\r\n    (load)=\"imageLoadedInView()\"/>\r\n    <div\r\n        class=\"overlay\"\r\n        [style.width.px]=\"maxSize.width\"\r\n        [style.height.px]=\"maxSize.height\"\r\n        [style.margin-left]=\"alignImage === 'center' ? marginLeft : null\"></div>\r\n    <div class=\"cropper\"\r\n        *ngIf=\"imageVisible\"\r\n        [class.rounded]=\"roundCropper\"\r\n        [style.top.px]=\"cropper.y1\"\r\n        [style.left.px]=\"cropper.x1\"\r\n        [style.width.px]=\"cropper.x2 - cropper.x1\"\r\n        [style.height.px]=\"cropper.y2 - cropper.y1\"\r\n        [style.margin-left]=\"alignImage === 'center' ? marginLeft : null\"\r\n        [style.visibility]=\"imageVisible ? 'visible' : 'hidden'\"\r\n        (keydown)=\"keyboardAccess($event)\"\r\n        tabindex=\"0\">\r\n        <div\r\n            (mousedown)=\"startMove($event, moveTypes.Move)\"\r\n            (touchstart)=\"startMove($event, moveTypes.Move)\"\r\n            class=\"move\">\r\n        </div>\r\n        <ng-container *ngIf=\"!hideResizeSquares\">\r\n            <span class=\"resize topleft\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'topleft')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'topleft')\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize top\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize topright\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'topright')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'topright')\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize right\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize bottomright\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'bottomright')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'bottomright')\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize bottom\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize bottomleft\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'bottomleft')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'bottomleft')\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize left\">\r\n                <span class=\"square\"></span>\r\n            </span>\r\n            <span class=\"resize-bar top\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'top')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'top')\">\r\n            </span>\r\n            <span class=\"resize-bar right\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'right')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'right')\">\r\n            </span>\r\n            <span class=\"resize-bar bottom\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'bottom')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'bottom')\">\r\n            </span>\r\n            <span class=\"resize-bar left\"\r\n                (mousedown)=\"startMove($event, moveTypes.Resize, 'left')\"\r\n                (touchstart)=\"startMove($event, moveTypes.Resize, 'left')\">\r\n            </span>\r\n        </ng-container>\r\n    </div>\r\n</div>","styles":[":host{display:flex;max-height:100%;max-width:100%;overflow:hidden;padding:5px;text-align:center}:host,:host>div{position:relative;width:100%}:host>div img.source-image{max-height:100%;max-width:100%;transform-origin:center}:host .overlay{left:0;outline:var(--cropper-overlay-color,#fff) solid 100vw;pointer-events:none;top:0}:host .cropper,:host .overlay{position:absolute;touch-action:none}:host .cropper{background:transparent;color:#53535c;display:flex;outline:100vw solid hsla(0,0%,100%,.3);outline:var(--cropper-outline-color,hsla(0,0%,100%,.3)) solid 100vw}@media (orientation:portrait){:host .cropper{outline-width:100vh}}:host .cropper:after{border:1px dashed;bottom:0;color:inherit;content:\"\";left:0;opacity:.75;pointer-events:none;position:absolute;right:0;top:0;z-index:1}:host .cropper .move{border:2px solid hsla(0,0%,100%,.5);cursor:move;height:100%;width:100%}:host .cropper:focus .move{border-color:#1e90ff;border-width:2px}:host .cropper .resize{display:inline-block;line-height:6px;opacity:.85;padding:8px;position:absolute;z-index:1}:host .cropper .resize .square{background:#53535c;border:1px solid hsla(0,0%,100%,.5);box-sizing:content-box;display:inline-block;height:6px;width:6px}:host .cropper .resize.topleft{cursor:nwse-resize;left:-12px;top:-12px}:host .cropper .resize.top{cursor:ns-resize;left:calc(50% - 12px);top:-12px}:host .cropper .resize.topright{cursor:nesw-resize;right:-12px;top:-12px}:host .cropper .resize.right{cursor:ew-resize;right:-12px;top:calc(50% - 12px)}:host .cropper .resize.bottomright{bottom:-12px;cursor:nwse-resize;right:-12px}:host .cropper .resize.bottom{bottom:-12px;cursor:ns-resize;left:calc(50% - 12px)}:host .cropper .resize.bottomleft{bottom:-12px;cursor:nesw-resize;left:-12px}:host .cropper .resize.left{cursor:ew-resize;left:-12px;top:calc(50% - 12px)}:host .cropper .resize-bar{position:absolute;z-index:1}:host .cropper .resize-bar.top{cursor:ns-resize;height:22px;left:11px;top:-11px;width:calc(100% - 22px)}:host .cropper .resize-bar.right{cursor:ew-resize;height:calc(100% - 22px);right:-11px;top:11px;width:22px}:host .cropper .resize-bar.bottom{bottom:-11px;cursor:ns-resize;height:22px;left:11px;width:calc(100% - 22px)}:host .cropper .resize-bar.left{cursor:ew-resize;height:calc(100% - 22px);left:-11px;top:11px;width:22px}:host .cropper.rounded{outline-color:transparent}:host .cropper.rounded:after{border-radius:100%;box-shadow:0 0 0 100vw hsla(0,0%,100%,.3);box-shadow:0 0 0 100vw var(--cropper-outline-color,hsla(0,0%,100%,.3))}@media (orientation:portrait){:host .cropper.rounded:after{box-shadow:0 0 0 100vh hsla(0,0%,100%,.3);box-shadow:0 0 0 100vh var(--cropper-outline-color,hsla(0,0%,100%,.3))}}:host .cropper.rounded .move{border-radius:100%}:host.disabled .cropper .move,:host.disabled .cropper .resize,:host.disabled .cropper .resize-bar{display:none}"]}]}],"members":{"wrapper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":45,"character":5},"arguments":["wrapper",{"static":true}]}]}],"sourceImage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":46,"character":5},"arguments":["sourceImage",{"static":false}]}]}],"imageChangedEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":48,"character":5}}]}],"imageURL":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":49,"character":5}}]}],"imageBase64":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":5}}]}],"imageFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"format":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"maintainAspectRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"transform":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"aspectRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"resizeToWidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"resizeToHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"cropperMinWidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":5}}]}],"cropperMinHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"cropperStaticWidth":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"cropperStaticHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"canvasRotation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"initialStepSize":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"roundCropper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":5}}]}],"onlyScaleDown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":5}}]}],"imageQuality":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":5}}]}],"autoCrop":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":5}}]}],"backgroundColor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"containWithinAspectRatio":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":5}}]}],"hideResizeSquares":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"cropper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"alignImage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":78,"character":5},"arguments":["style.text-align"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":5}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":80,"character":5},"arguments":["class.disabled"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":81,"character":5}}]}],"imageCropped":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":83,"character":5}}]}],"startCropImage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":84,"character":5}}]}],"imageLoaded":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":5}}]}],"cropperReady":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":86,"character":5}}]}],"loadImageFailed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":87,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":89,"character":35},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":90,"character":28}]}],"ngOnChanges":[{"__symbolic":"method"}],"onChangesInputImage":[{"__symbolic":"method"}],"isValidImageChangedEvent":[{"__symbolic":"method"}],"setCssTransform":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"initCropper":[{"__symbolic":"method"}],"loadImage":[{"__symbolic":"method"}],"loadImageFile":[{"__symbolic":"method"}],"isValidImageType":[{"__symbolic":"method"}],"loadBase64Image":[{"__symbolic":"method"}],"checkExifAndLoadBase64Image":[{"__symbolic":"method"}],"loadImageFromURL":[{"__symbolic":"method"}],"transformOriginalImage":[{"__symbolic":"method"}],"transformImageBase64":[{"__symbolic":"method"}],"getTransformedSize":[{"__symbolic":"method"}],"setTransformedImage":[{"__symbolic":"method"}],"imageLoadedInView":[{"__symbolic":"method"}],"checkImageMaxSizeRecursively":[{"__symbolic":"method"}],"sourceImageLoaded":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":368,"character":5},"arguments":["window:resize"]}]}],"activatePinchGesture":[{"__symbolic":"method"}],"resizeCropperPosition":[{"__symbolic":"method"}],"resetCropperPosition":[{"__symbolic":"method"}],"keyboardAccess":[{"__symbolic":"method"}],"changeKeyboardStepSize":[{"__symbolic":"method"}],"keyboardMoveCropper":[{"__symbolic":"method"}],"getPositionForKey":[{"__symbolic":"method"}],"getInvertedPositionForKey":[{"__symbolic":"method"}],"getEventForKey":[{"__symbolic":"method"}],"startMove":[{"__symbolic":"method"}],"startPinch":[{"__symbolic":"method"}],"moveImg":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":533,"character":5},"arguments":["document:mousemove",["$event"]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":534,"character":5},"arguments":["document:touchmove",["$event"]]}]}],"onPinch":[{"__symbolic":"method"}],"setMaxSize":[{"__symbolic":"method"}],"setCropperScaledMinSize":[{"__symbolic":"method"}],"setCropperScaledMinWidth":[{"__symbolic":"method"}],"setCropperScaledMinHeight":[{"__symbolic":"method"}],"checkCropperPosition":[{"__symbolic":"method"}],"moveStop":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":626,"character":5},"arguments":["document:mouseup"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":627,"character":5},"arguments":["document:touchend"]}]}],"pinchStop":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"resize":[{"__symbolic":"method"}],"checkAspectRatio":[{"__symbolic":"method"}],"doAutoCrop":[{"__symbolic":"method"}],"crop":[{"__symbolic":"method"}],"getImagePosition":[{"__symbolic":"method"}],"getOffsetImagePosition":[{"__symbolic":"method"}],"cropToBase64":[{"__symbolic":"method"}],"getQuality":[{"__symbolic":"method"}],"getResizeRatio":[{"__symbolic":"method"}],"getClientX":[{"__symbolic":"method"}],"getClientY":[{"__symbolic":"method"}]}},"base64ToFile":{"__symbolic":"function"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"asw-json-preview-dialog","template":"<!-- <h1 mat-dialog-title>Warning!</h1> -->\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <pre>{{data | json}}</pre>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"onNoClick()\">\r\n        Close\r\n    </button>\r\n    <button mat-raised-button \r\n            type=\"button\"\r\n            class=\"btn btn-info\"\r\n            [cdkCopyToClipboard]=\"data | json\"\r\n            cdkFocusInitial>\r\n            <i class=\"material-icons\">content_copy</i>\r\n        Copy Data\r\n    </button>\r\n</mat-dialog-actions>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":10,"character":9},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":10,"character":16}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵa"}]},{"__symbolic":"reference","name":"any"}]}],"onNoClick":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":44,"character":1},"arguments":[{"exports":[{"__symbolic":"reference","module":"@angular/cdk/a11y","name":"A11yModule","line":46,"character":8},{"__symbolic":"reference","module":"@angular/cdk/clipboard","name":"ClipboardModule","line":47,"character":8},{"__symbolic":"reference","module":"@angular/cdk/stepper","name":"CdkStepperModule","line":48,"character":8},{"__symbolic":"reference","module":"@angular/cdk/table","name":"CdkTableModule","line":49,"character":8},{"__symbolic":"reference","module":"@angular/cdk/tree","name":"CdkTreeModule","line":50,"character":8},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":51,"character":8},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":52,"character":8},{"__symbolic":"reference","module":"@angular/material/badge","name":"MatBadgeModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material/bottom-sheet","name":"MatBottomSheetModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material/button-toggle","name":"MatButtonToggleModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":57,"character":8},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":58,"character":8},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":59,"character":8},{"__symbolic":"reference","module":"@angular/material/stepper","name":"MatStepperModule","line":60,"character":8},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":61,"character":8},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":62,"character":8},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":63,"character":8},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":64,"character":8},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":65,"character":8},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":66,"character":8},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":67,"character":8},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":68,"character":8},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":69,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":70,"character":8},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":71,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":72,"character":8},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":73,"character":8},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":74,"character":8},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":75,"character":8},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":76,"character":8},{"__symbolic":"reference","module":"@angular/material/sidenav","name":"MatSidenavModule","line":77,"character":8},{"__symbolic":"reference","module":"@angular/material/slider","name":"MatSliderModule","line":78,"character":8},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":79,"character":8},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":80,"character":8},{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSortModule","line":81,"character":8},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":82,"character":8},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":83,"character":8},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":84,"character":8},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":85,"character":8},{"__symbolic":"reference","module":"@angular/material/tree","name":"MatTreeModule","line":86,"character":8},{"__symbolic":"reference","module":"@angular/cdk/portal","name":"PortalModule","line":87,"character":8},{"__symbolic":"reference","module":"@angular/cdk/scrolling","name":"ScrollingModule","line":88,"character":8}]}]}],"members":{}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":21,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":26,"character":4},{"__symbolic":"reference","name":"ɵb"}],"declarations":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"}],"exports":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"}]}]}],"members":{}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-text-box","template":"<mat-form-field hintLabel=\"Max {{control.maxlength}} characters\" appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <input matInput [type]=\"control.type\"\r\n                    [name]=\"control.name\"\r\n                    [placeholder]=\"control.label\"\r\n                    [(ngModel)]=\"control.value\"\r\n                    ngModel\r\n                    #input\r\n                    [matTooltip]=\"control.tooltip\"\r\n                    [maxlength]=\"control.maxlength\"\r\n                    [required]=\"control.isRequired\">\r\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/{{control.maxlength}}</mat-hint>                \r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit textbox control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editTextboxDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove textbox control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteTextboxDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":2}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":2}}]}],"textboxUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"textboxDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":26,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":28,"character":31}]}],"deleteTextboxDialog":[{"__symbolic":"method"}],"editTextboxDialog":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-text-area","template":"<mat-form-field hintLabel=\"Max {{control.maxlength}} characters\" appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <textarea matInput [name]=\"control.name\"\r\n                    [placeholder]=\"control.label\"\r\n                    [(ngModel)]=\"control.value\"\r\n                    ngModel\r\n                    #input\r\n                    [matTooltip]=\"control.tooltip\"\r\n                    [maxlength]=\"control.maxlength\"\r\n                    [required]=\"control.isRequired\"></textarea>\r\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/{{control.maxlength}}</mat-hint>                \r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit textarea control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editTextAreaDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove textarea control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteTextAreaDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"textAreaUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"textAreaDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteTextAreaDialog":[{"__symbolic":"method"}],"editTextAreaDialog":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-select","template":"<mat-form-field appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <mat-select [placeholder]=\"control.label\" ngModel [matTooltip]=\"control.tooltip\" [required]=\"control.isRequired\">\r\n        <mat-option *ngFor=\"let option of control.options\" [value]=\"option.key\">\r\n            {{ option.value }}\r\n        </mat-option>\r\n    </mat-select>               \r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit select control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editSelectDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove select control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteSelectDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"selectUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"selectDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteSelectDialog":[{"__symbolic":"method"}],"editSelectDialog":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-multi-select","template":"<mat-form-field appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <mat-select [placeholder]=\"control.label\" ngModel multiple [required]=\"control.isRequired\">\r\n        <mat-option *ngFor=\"let option of control.options\" [value]=\"option.key\">\r\n            {{ option.value }}\r\n        </mat-option>\r\n    </mat-select>               \r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit multi select control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editMultiSelectDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove multi select control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteMultiSelectDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"multiSelectUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"multiSelectDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteMultiSelectDialog":[{"__symbolic":"method"}],"editMultiSelectDialog":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-radio-button","template":"<label id=\"example-radio-group-label\">{{control.label}}</label>\r\n<mat-radio-group class=\"asw-radio-group\" [matTooltip]=\"control.tooltip\">\r\n    <mat-radio-button color=\"primary\" *ngFor=\"let option of control.options\" \r\n                    [value]=\"option.key\">\r\n                {{ option.value }}\r\n    </mat-radio-button>\r\n</mat-radio-group>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit radio button control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editRadioButtonDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove radio button control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteRadioButtonDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"radioButtonUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"radioButtonDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteRadioButtonDialog":[{"__symbolic":"method"}],"editRadioButtonDialog":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-datepicker","template":"<mat-form-field appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <input matInput [matDatepicker]=\"picker\" \r\n                    ngModel \r\n                    [(ngModel)]=\"control.value\"\r\n                    [matTooltip]=\"control.tooltip\"\r\n                    [placeholder]=\"control.label\" \r\n                    [required]=\"control.isRequired\">\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit datepicker control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editDatepickerDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove datepicker control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteDatepickerDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"datepickerUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"datepickerDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteDatepickerDialog":[{"__symbolic":"method"}],"editDatepickerDialog":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-button","template":"<div [ngSwitch]=\"control.style\">\r\n    <div *ngSwitchCase=\"'mat-button'\">\r\n        <button mat-button \r\n                [color]=\"control.color\"\r\n                [type]=\"control.type\"\r\n                [matTooltip]=\"control.tooltip\"\r\n                [name]=\"control.name\"\r\n                >{{control.label}}</button>\r\n    </div>\r\n    <div *ngSwitchCase=\"'mat-raised-button'\">\r\n        <button mat-raised-button \r\n                [color]=\"control.color\"\r\n                [type]=\"control.type\"\r\n                [matTooltip]=\"control.tooltip\"\r\n                [name]=\"control.name\"\r\n                >{{control.label}}</button>\r\n    </div>\r\n    <div *ngSwitchCase=\"'mat-stroked-button'\">\r\n        <button mat-stroked-button \r\n                [color]=\"control.color\"\r\n                [type]=\"control.type\"\r\n                [matTooltip]=\"control.tooltip\"\r\n                [name]=\"control.name\"\r\n                >{{control.label}}</button>\r\n    </div>\r\n    <div *ngSwitchCase=\"'mat-flat-button'\">\r\n        <button mat-flat-button \r\n                [color]=\"control.color\"\r\n                [type]=\"control.type\"\r\n                [title]=\"control.tooltip\"\r\n                [name]=\"control.name\"\r\n                [title]=\"control.tooltip\"\r\n                >{{control.label}}</button>\r\n    </div>\r\n</div> \r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit button\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editButtonDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove button\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteButtonDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>\r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"buttonUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"buttonDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteButtonDialog":[{"__symbolic":"method"}],"editButtonDialog":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"asw-autocomplete","template":"<mat-form-field appearance=\"{{control.style}}\">\r\n    <mat-label>{{control.label}}</mat-label>\r\n    <input [type]=\"control.type\"\r\n           [name]=\"control.name\"\r\n           [placeholder]=\"control.label\"\r\n           [matAutocomplete]=\"auto\"\r\n           matInput\r\n           [formControl]=\"autocomplete\"\r\n           [matTooltip]=\"control.tooltip\"\r\n           [required]=\"control.isRequired\">\r\n    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.value\">\r\n            {{option.value}}\r\n        </mat-option>\r\n    </mat-autocomplete>\r\n</mat-form-field>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit autocomplete control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editAutocompleteDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove autocomplete control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteAutocompleteDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":2}}]}],"autocompleteUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":27,"character":5}}]}],"autocompleteDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":30,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"_filter":[{"__symbolic":"method"}],"deleteAutocompleteDialog":[{"__symbolic":"method"}],"editAutocompleteDialog":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-checkbox","template":"<mat-label>{{control.label}}</mat-label>\r\n<div *ngFor=\"let option of control.options\">\r\n    <mat-checkbox color=\"primary\" \r\n                [name]=\"control.name\"\r\n                [matTooltip]=\"option.value\"\r\n                [required]=\"control.isRequired\">\r\n        {{option.value}}\r\n    </mat-checkbox>\r\n</div>   \r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit checkbox control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editCheckboxDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove checkbox control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteCheckboxDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"checkboxUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"checkboxDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteCheckboxDialog":[{"__symbolic":"method"}],"editCheckboxDialog":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-slide-toggle","template":"<mat-slide-toggle [color]=\"control.color\" [required]=\"control.isRequired\">{{control.label}}</mat-slide-toggle>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit slide toggle control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editSlideToggleDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove slide toggle control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteSlideToggleDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"slidetoggleUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"slidetoggleDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":28}]}],"deleteSlideToggleDialog":[{"__symbolic":"method"}],"editSlideToggleDialog":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-header","template":"<div [ngSwitch]=\"control.subtype\">\r\n    <div *ngSwitchCase=\"'h1'\">\r\n        <h1 [class]=\"control.style\">{{control.label}}</h1>\r\n    </div>\r\n    <div *ngSwitchCase=\"'h2'\">\r\n        <h2 [class]=\"control.style\">{{control.label}}</h2>\r\n    </div>\r\n    <div *ngSwitchCase=\"'h3'\">\r\n        <h3 [class]=\"control.style\">{{control.label}}</h3>\r\n    </div>\r\n    <div *ngSwitchCase=\"'h4'\">\r\n        <h4 [class]=\"control.style\">{{control.label}}</h4>\r\n    </div>\r\n    <div *ngSwitchCase=\"'h5'\">\r\n        <h5 [class]=\"control.style\">{{control.label}}</h5>\r\n    </div>\r\n    <div *ngSwitchCase=\"'h6'\">\r\n        <h6 [class]=\"control.style\">{{control.label}}</h6>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit header control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editHeaderDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove header control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteHeaderDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"headerUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"headerDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteHeaderDialog":[{"__symbolic":"method"}],"editHeaderDialog":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-paragraph","template":"<div [ngSwitch]=\"control.subtype\">\r\n    <div *ngSwitchCase=\"'p'\">\r\n        <p [class]=\"control.style\">\r\n            {{control.label}}\r\n        </p>\r\n    </div>\r\n    <div *ngSwitchCase=\"'address'\">\r\n        <address [class]=\"control.style\">\r\n            {{control.label}}\r\n        </address>\r\n    </div>\r\n    <div *ngSwitchCase=\"'blockquote'\">\r\n        <blockquote [class]=\"control.style\">\r\n            {{control.label}}\r\n        </blockquote>\r\n    </div>\r\n    <div *ngSwitchCase=\"'canvas'\">\r\n        <canvas [class]=\"control.style\">\r\n            {{control.label}}\r\n        </canvas>\r\n    </div>\r\n    <div *ngSwitchCase=\"'output'\">\r\n        <output [class]=\"control.style\">\r\n            {{control.label}}\r\n        </output>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Edit paragraph control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"editParagraphDialog(control, controlIndex)\"\r\n                class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">edit</i>\r\n        </button>\r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove paragraph control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteParagraphDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"paragraphUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"paragraphDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteParagraphDialog":[{"__symbolic":"method"}],"editParagraphDialog":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-divider","template":"<mat-divider></mat-divider>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n    <div class=\"col-md-12\">        \r\n        <button mat-raised-button \r\n                type=\"button\" \r\n                matTooltip=\"Remove header control\" \r\n                [matTooltipPosition]=\"'above'\" \r\n                (click)=\"deleteHeaderDialog(control, controlIndex)\"\r\n                class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n            <i class=\"material-icons\">close</i>\r\n        </button>\r\n    </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":2}}]}],"dividerDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":23,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":25,"character":31}]}],"deleteHeaderDialog":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-image","template":"<div class=\"avatar-upload\">\r\n    <div class=\"avatar-preview\">\r\n        <div id=\"imagePreview\" [style.backgroundImage]=\"'url('+ control.imageUrl +')'\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"isPreviewTemplate\">\r\n  <div class=\"col-md-12\">\r\n      <button mat-raised-button \r\n              type=\"button\" \r\n              matTooltip=\"Edit textbox control\" \r\n              [matTooltipPosition]=\"'above'\" \r\n              (click)=\"editImageDialog(control, controlIndex)\"\r\n              class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n          <i class=\"material-icons\">edit</i>\r\n      </button>\r\n      <button mat-raised-button \r\n              type=\"button\" \r\n              matTooltip=\"Remove textbox control\" \r\n              [matTooltipPosition]=\"'above'\" \r\n              (click)=\"deleteImageDialog(control, controlIndex)\"\r\n              class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n          <i class=\"material-icons\">close</i>\r\n      </button>\r\n  </div>                                            \r\n</div>"}]}],"members":{"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":5}}]}],"controlIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":5}}]}],"isPreviewTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":4}}]}],"imageUpdateEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":5}}]}],"imageDeleteEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":27,"character":31}]}],"deleteImageDialog":[{"__symbolic":"method"}],"editImageDialog":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":18,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":4},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ImageCropModule"}],"declarations":[{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbb"}],"exports":[{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbb"}]}]}],"members":{}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-text-box","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswEditTextboxForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswEditTextboxForm.get('label').hasError(validation.type) && (aswEditTextboxForm.get('label').dirty || aswEditTextboxForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Tooltip</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"tooltip\"\r\n                                        placeholder=\"Enter tooltip\"\r\n                                        matTooltip=\"Enter tooltip\"\r\n                                        formControlName=\"tooltip\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        matTooltip=\"Enter name\"\r\n                                        formControlName=\"name\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.name\">\r\n                            <mat-error *ngIf=\"aswEditTextboxForm.get('name').hasError(validation.type) && (aswEditTextboxForm.get('name').dirty || aswEditTextboxForm.get('name').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 {{validation.message}}\r\n                                </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Value</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"value\"\r\n                                        placeholder=\"Enter value\"\r\n                                        matTooltip=\"Enter value\"\r\n                                        formControlName=\"value\">                        \r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Type</mat-label>\r\n                        <mat-select formControlName=\"type\" matTooltip=\"Select type\">\r\n                            <mat-option value=\"text\">Text</mat-option>\r\n                            <mat-option value=\"password\">Password</mat-option>\r\n                            <mat-option value=\"number\">Number</mat-option>\r\n                            <mat-option value=\"email\">Email</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Textbox Style</mat-label>\r\n                        <mat-select formControlName=\"style\" matTooltip=\"Select textbox style\">\r\n                            <mat-option value=\"legacy\">Legacy</mat-option>\r\n                            <mat-option value=\"standard\">Standard</mat-option>\r\n                            <mat-option value=\"fill\">Fill</mat-option>\r\n                            <mat-option value=\"outline\">Outline</mat-option>                    \r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Max Length</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"maxlength\"\r\n                                        placeholder=\"Enter maxlength\"\r\n                                        matTooltip=\"Enter maxlength\"\r\n                                        maxlength=\"3\"\r\n                                        minlength=\"1\"\r\n                                        pattern=\"^[0-9]*$\"\r\n                                        formControlName=\"maxlength\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.maxlength\">\r\n                            <mat-error *ngIf=\"aswEditTextboxForm.get('maxlength').hasError(validation.type)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 {{validation.message}}\r\n                                </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>   \r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isActive\r\n                          formControlName=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵs"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-text-area","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswEditTextAreaForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswEditTextAreaForm.get('label').hasError(validation.type) && (aswEditTextAreaForm.get('label').dirty || aswEditTextAreaForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Tooltip</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"tooltip\"\r\n                                        placeholder=\"Enter tooltip\"\r\n                                        matTooltip=\"Enter tooltip\"\r\n                                        formControlName=\"tooltip\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        matTooltip=\"Enter name\"\r\n                                        formControlName=\"name\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.name\">\r\n                            <mat-error *ngIf=\"aswEditTextAreaForm.get('name').hasError(validation.type) && (aswEditTextAreaForm.get('name').dirty || aswEditTextAreaForm.get('name').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Value</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"value\"\r\n                                        placeholder=\"Enter value\"\r\n                                        matTooltip=\"Enter value\"\r\n                                        formControlName=\"value\">                        \r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Textarea Style</mat-label>\r\n                        <mat-select formControlName=\"style\" matTooltip=\"Select textarea style\">\r\n                            <mat-option value=\"legacy\">Legacy</mat-option>\r\n                            <mat-option value=\"standard\">Standard</mat-option>\r\n                            <mat-option value=\"fill\">Fill</mat-option>\r\n                            <mat-option value=\"outline\">Outline</mat-option>                    \r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">                    \r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Max Length</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"maxlength\"\r\n                                        placeholder=\"Enter maxlength\"\r\n                                        matTooltip=\"Enter maxlength\"\r\n                                        minlength=\"1\"\r\n                                        maxlength=\"3\"\r\n                                        pattern=\"^[0-9]*$\"\r\n                                        formControlName=\"maxlength\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.maxlength\">\r\n                            <mat-error *ngIf=\"aswEditTextAreaForm.get('maxlength').hasError(validation.type)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isActive\r\n                          formControlName=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵt"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-select","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form #aswEditPropertyForm=\"ngForm\" (ngSubmit)=\"onSubmit(aswEditPropertyForm)\" novalidate>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        #fieldLabel=\"ngModel\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        minlength=\"4\"\r\n                                        [(ngModel)]=\"label\" required>\r\n                        <mat-error *ngIf=\"fieldLabel.invalid && (fieldLabel.dirty || fieldLabel.touched)\">\r\n                            <mat-error *ngIf=\"fieldLabel.errors.required\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                Enter label\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"fieldLabel.errors.minlength\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                Sorry, label must be at least 4 characters long.\r\n                            </mat-error>\r\n                        </mat-error>  \r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Tooltip</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"tooltip\"\r\n                                        placeholder=\"Enter tooltip\"\r\n                                        matTooltip=\"Enter tooltip\"\r\n                                        [(ngModel)]=\"tooltip\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"isShowStyle; else nameBlock\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                name=\"name\"\r\n                                #fieldName=\"ngModel\"\r\n                                placeholder=\"Enter name\"\r\n                                matTooltip=\"Enter name\"\r\n                                maxlength=\"20\"\r\n                                minlength=\"4\"\r\n                                [(ngModel)]=\"name\" required>                        \r\n                        <mat-error *ngIf=\"fieldName.invalid && (fieldName.dirty || fieldName.touched)\">\r\n                            <mat-error *ngIf=\"fieldName.errors.required\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                Enter name\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"fieldName.errors.minlength\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                Sorry, name must be between 4 and 25 characters long.\r\n                            </mat-error>\r\n                        </mat-error>    \r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Select Style</mat-label>\r\n                        <mat-select [(ngModel)]=\"style\" name=\"style\" matTooltip=\"Select style\">\r\n                            <mat-option value=\"legacy\">Legacy</mat-option>\r\n                            <mat-option value=\"standard\">Standard</mat-option>\r\n                            <mat-option value=\"fill\">Fill</mat-option>\r\n                            <mat-option value=\"outline\">Outline</mat-option>                    \r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div> \r\n            <ng-template #nameBlock>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Name</mat-label>\r\n                            <input matInput type=\"text\"\r\n                                    name=\"name\"\r\n                                    #fieldName=\"ngModel\"\r\n                                    placeholder=\"Enter name\"\r\n                                    matTooltip=\"Enter name\"\r\n                                    maxlength=\"20\"\r\n                                    appForbiddenName\r\n                                    forbiddenName=\"bob\"\r\n                                    minlength=\"4\"\r\n                                    [(ngModel)]=\"name\" required>                        \r\n                            <mat-error *ngIf=\"fieldName.invalid && (fieldName.dirty || fieldName.touched)\">\r\n                                <mat-error *ngIf=\"fieldName.errors.required\">\r\n                                    <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                    Enter name\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"fieldName.errors.minlength\">\r\n                                    <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                    Sorry, name must be between 4 and 25 characters long.\r\n                                </mat-error>\r\n                            </mat-error>    \r\n                        </mat-form-field>\r\n                    </div>\r\n                </div> \r\n            </ng-template>           \r\n            <div class=\"row\" *ngFor=\"let option of options; let i = index\">\r\n                <div class=\"col-md-5\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Option key {{i+1}}</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                [name]=\"option.key + i\"\r\n                                #key=\"ngModel\"\r\n                                placeholder=\"Option key\"\r\n                                [(ngModel)]=\"option.key\"\r\n                                matTooltip=\"Option key\"\r\n                                minlength=\"4\"\r\n                                maxlength=\"50\"\r\n                                (keyup)=\"onKey($event, i)\"\r\n                                pattern=\"^[a-z0-9_-]{1,50}$\"\r\n                                required>\r\n                        <mat-error *ngIf=\"key.invalid && (key.dirty || key.touched)\">\r\n                            <mat-error *ngIf=\"key.errors.required\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 Enter option key.\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"key.errors.minlength\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 Sorry, your option key must be between 4 and 50 characters long.\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"key.errors.pattern\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 Sorry, only letters (a-z), numbers (0-9), and periods (- and _) are allowed.\r\n                            </mat-error>\r\n                            <!-- <mat-error>\r\n                                {{optionKeyMessage}}\r\n                            </mat-error> -->\r\n                        </mat-error>                          \r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-5\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Option value {{i+1}}</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                [name]=\"option.value + i\"\r\n                                #value=\"ngModel\"\r\n                                placeholder=\"Option value\"\r\n                                [(ngModel)]=\"option.value\"\r\n                                matTooltip=\"Option value\"\r\n                                minlength=\"4\"\r\n                                maxlength=\"999\"\r\n                                required>\r\n                        <mat-error *ngIf=\"value.invalid && (value.dirty || value.touched)\">\r\n                            <mat-error *ngIf=\"value.errors.required\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 Enter option value\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"value.errors.minlength\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                 Sorry, your option value must be at least 4 characters long.\r\n                            </mat-error>\r\n                        </mat-error> \r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <button mat-raised-button *ngIf=\"options.length - 1 == i\"\r\n                            type=\"button\" \r\n                            matTooltip=\"Add option\" \r\n                            [matTooltipPosition]=\"'above'\" \r\n                            (click)=\"addNewOption()\"\r\n                            class=\"btn btn-success btn-link btn-sm btn-just-icon\">\r\n                        <i class=\"material-icons\">add</i>\r\n                    </button>\r\n                    <button mat-raised-button *ngIf=\"i != 0\"\r\n                            type=\"button\" \r\n                            matTooltip=\"Remove option\" \r\n                            [matTooltipPosition]=\"'above'\" \r\n                            (click)=\"removeOption(i)\"\r\n                            class=\"btn btn-danger btn-link btn-sm btn-just-icon\">\r\n                        <i class=\"material-icons\">close</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isActive\r\n                          name=\"isRequired\"\r\n                          [(ngModel)]=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":23,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":23,"character":24}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵu"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"addNewOption":[{"__symbolic":"method"}],"removeOption":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onKey":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-datepicker","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswDatepickerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswDatepickerForm.get('label').hasError(validation.type) && (aswDatepickerForm.get('label').dirty || aswDatepickerForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> \r\n                                {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Tooltip</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"tooltip\"\r\n                                        placeholder=\"Enter tooltip\"\r\n                                        matTooltip=\"Enter tooltip\"\r\n                                        formControlName=\"tooltip\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        matTooltip=\"Enter name\"\r\n                                        formControlName=\"name\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.name\">\r\n                            <mat-error *ngIf=\"aswDatepickerForm.get('name').hasError(validation.type) && (aswDatepickerForm.get('name').dirty || aswDatepickerForm.get('name').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon>\r\n                                    {{validation.message}}\r\n                                </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Value</mat-label>                        \r\n                        <input matInput \r\n                                name=\"value\" \r\n                                placeholder=\"Enter value\"\r\n                                matTooltip=\"Enter value\"\r\n                                formControlName=\"value\"\r\n                                [matDatepicker]=\"picker\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Textbox Style</mat-label>\r\n                        <mat-select formControlName=\"style\" matTooltip=\"Select textbox style\">\r\n                            <mat-option value=\"legacy\">Legacy</mat-option>\r\n                            <mat-option value=\"standard\">Standard</mat-option>\r\n                            <mat-option value=\"fill\">Fill</mat-option>\r\n                            <mat-option value=\"outline\">Outline</mat-option>                    \r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>   \r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isActive\r\n                          formControlName=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵv"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-button","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswEditButtonForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">        \r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswEditButtonForm.get('label').hasError(validation.type) && (aswEditButtonForm.get('label').dirty || aswEditButtonForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Tooltip</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"tooltip\"\r\n                                        placeholder=\"Enter tooltip\"\r\n                                        matTooltip=\"Enter tooltip\"\r\n                                        formControlName=\"tooltip\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Name</mat-label>\r\n                <input matInput type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                matTooltip=\"Enter name\"\r\n                                formControlName=\"name\" required>\r\n                <mat-error *ngFor=\"let validation of constants.accountValidationMessages.name\">\r\n                    <mat-error *ngIf=\"aswEditButtonForm.get('name').hasError(validation.type) && (aswEditButtonForm.get('name').dirty || aswEditButtonForm.get('name').touched)\">\r\n                        <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                    </mat-error>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Type</mat-label>\r\n                <mat-select formControlName=\"type\" matTooltip=\"Select button type\">\r\n                    <mat-option value=\"button\">Button</mat-option>\r\n                    <mat-option value=\"submit\">Submit</mat-option>\r\n                    <mat-option value=\"reset\">Reset</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Button Style</mat-label>\r\n                        <mat-select formControlName=\"style\" matTooltip=\"Select button style\">\r\n                            <mat-option value=\"mat-button\">Basic</mat-option>\r\n                            <mat-option value=\"mat-raised-button\">Raised</mat-option>\r\n                            <mat-option value=\"mat-stroked-button\">Stroked</mat-option>\r\n                            <mat-option value=\"mat-flat-button\">Flat</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Color</mat-label>\r\n                        <mat-select formControlName=\"color\" matTooltip=\"Select button color\">\r\n                            <mat-option value=\"\">Basic</mat-option>\r\n                            <mat-option value=\"primary\">Primary</mat-option>\r\n                            <mat-option value=\"accent\">Rose</mat-option>\r\n                            <mat-option value=\"warn\">Danger</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isActive\r\n                          formControlName=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵw"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"asw-confirm-dialog","template":"<h1 mat-dialog-title>Warning!</h1>\r\n<mat-dialog-content class=\"mat-typography\">\r\n    <p>{{data.message}} </p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"onNoClick()\">\r\n        No\r\n    </button>\r\n    <button mat-raised-button type=\"button\"\r\n            class=\"btn btn-danger\"\r\n            [mat-dialog-close]=\"data.name\"\r\n            cdkFocusInitial>\r\n        Yes\r\n    </button>\r\n</mat-dialog-actions>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":10,"character":9},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":10,"character":16}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵx"}]},{"__symbolic":"reference","name":"any"}]}],"onNoClick":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-slide-toggle","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswEditSlideToggleForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswEditSlideToggleForm.get('label').hasError(validation.type) && (aswEditSlideToggleForm.get('label').dirty || aswEditSlideToggleForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Color</mat-label>\r\n                        <mat-select formControlName=\"color\" matTooltip=\"Select slide toggle color\">\r\n                            <mat-option value=\"primary\">Primary</mat-option>\r\n                            <mat-option value=\"accent\">Accent</mat-option>\r\n                            <mat-option value=\"warn\">Warn</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-slide-toggle color=\"primary\"\r\n                          #isRequired\r\n                          formControlName=\"isRequired\"\r\n                          (change)=\"onChange($event)\">{{status? 'Required':'Not Required'}}\r\n                    </mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵy"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-header","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswHeaderForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Label</mat-label>\r\n                        <input matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter label\"\r\n                                        matTooltip=\"Enter label\"\r\n                                        formControlName=\"label\" required>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswHeaderForm.get('label').hasError(validation.type) && (aswHeaderForm.get('label').dirty || aswHeaderForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Type</mat-label>\r\n                        <mat-select formControlName=\"subtype\">\r\n                            <mat-option value=\"h1\">H1</mat-option>\r\n                            <mat-option value=\"h2\">H2</mat-option>\r\n                            <mat-option value=\"h3\">H3</mat-option>\r\n                            <mat-option value=\"h4\">H4</mat-option>\r\n                            <mat-option value=\"h5\">H5</mat-option>\r\n                            <mat-option value=\"h6\">H6</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    Text style: \r\n                    <mat-button-toggle-group formControlName=\"style\" name=\"fontStyle\" aria-label=\"Font Style\">\r\n                        <mat-button-toggle value=\"text-left\" aria-label=\"Text align left\">\r\n                            <mat-icon>format_align_left</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-center\" aria-label=\"Text align center\">\r\n                            <mat-icon>format_align_center</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-right\" aria-label=\"Text align right\">\r\n                            <mat-icon>format_align_right</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-justify\" aria-label=\"Text align justify\">\r\n                            <mat-icon>format_align_justify</mat-icon>\r\n                        </mat-button-toggle>\r\n                    </mat-button-toggle-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵz"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"asw-edit-paragraph","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<form [formGroup]=\"aswParagraphForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"asw-full-width\"><br>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Content</mat-label>\r\n                        <textarea matInput type=\"text\"\r\n                                        name=\"label\"\r\n                                        placeholder=\"Enter Content\"\r\n                                        matTooltip=\"Enter Content\"\r\n                                        formControlName=\"label\" required></textarea>\r\n                        <mat-error *ngFor=\"let validation of constants.accountValidationMessages.label\">\r\n                            <mat-error *ngIf=\"aswParagraphForm.get('label').hasError(validation.type) && (aswParagraphForm.get('label').dirty || aswParagraphForm.get('label').touched)\">\r\n                                <mat-icon aria-hidden=\"false\">error</mat-icon> {{validation.message}}\r\n                            </mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Type</mat-label>\r\n                        <mat-select formControlName=\"subtype\">\r\n                            <mat-option value=\"p\">P</mat-option>\r\n                            <mat-option value=\"address\">Address</mat-option>\r\n                            <mat-option value=\"blockquote\">Blockquote</mat-option>\r\n                            <mat-option value=\"canvas\">Canvas</mat-option>\r\n                            <mat-option value=\"output\">Output</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    Text style: \r\n                    <mat-button-toggle-group formControlName=\"style\" name=\"fontStyle\" aria-label=\"Font Style\">\r\n                        <mat-button-toggle value=\"text-left\" aria-label=\"Text align left\">\r\n                            <mat-icon>format_align_left</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-center\" aria-label=\"Text align center\">\r\n                            <mat-icon>format_align_center</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-right\" aria-label=\"Text align right\">\r\n                            <mat-icon>format_align_right</mat-icon>\r\n                        </mat-button-toggle>\r\n                        <mat-button-toggle value=\"text-justify\" aria-label=\"Text align justify\">\r\n                            <mat-icon>format_align_justify</mat-icon>\r\n                        </mat-button-toggle>\r\n                    </mat-button-toggle-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":15,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":15,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":13,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵba"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnInit":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"asw-image-upload-dialog","template":"<h4 mat-dialog-title>Edit Property</h4>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]=\"aswImageCropForm\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <input type=\"file\" \r\n                        id=\"imageUpload\" \r\n                        accept=\".png, .jpg, .jpeg\" \r\n                        (change)=\"fileChangeEvent($event)\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"toolbar\"> \r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"rotateLeft()\">\r\n                        <span class=\"material-icons\">\r\n                            rotate_left\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"rotateRight()\">\r\n                        <span class=\"material-icons\">\r\n                            rotate_right\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"flipHorizontal()\">\r\n                        <span class=\"material-icons\">\r\n                            swap_horiz\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"flipVertical()\">\r\n                        <span class=\"material-icons\">\r\n                            swap_vert\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"toggleContainWithinAspectRatio()\">\r\n                        <span class=\"material-icons\">\r\n                            {{containWithinAspectRatio?'crop_free':'crop_din'}}\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"resetImage()\">\r\n                        <span class=\"material-icons\">\r\n                            refresh\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"zoomOut()\">\r\n                        <span class=\"material-icons\">\r\n                            zoom_out\r\n                        </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"toolbar__button\" (click)=\"zoomIn()\">\r\n                        <span class=\"material-icons\">\r\n                            zoom_in\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <asw-image-crop\r\n                [imageChangedEvent]=\"imageChangedEvent\"\r\n                [maintainAspectRatio]=\"true\"\r\n                [containWithinAspectRatio]=\"containWithinAspectRatio\"\r\n                [aspectRatio]=\"1\"\r\n                [resizeToWidth]=\"256\" \r\n                [roundCropper]=\"true\"\r\n                [canvasRotation]=\"canvasRotation\"\r\n                [transform]=\"transform\"\r\n                [alignImage]=\"'center'\"\r\n                [style.display]=\"showCropper ? null : 'none'\"\r\n                format=\"png\"\r\n                (imageCropped)=\"imageCropped($event)\"\r\n                (imageLoaded)=\"imageLoaded()\"\r\n                (cropperReady)=\"cropperReady($event)\"\r\n                (loadImageFailed)=\"loadImageFailed()\"\r\n                ></asw-image-crop>\r\n            </div>\r\n        </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                (click)=\"onNoClick()\">\r\n            No\r\n        </button>\r\n        <button mat-raised-button type=\"submit\"\r\n                class=\"btn btn-primary\"\r\n                cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":25,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":25,"character":24}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":23,"character":37},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbb"}]},{"__symbolic":"reference","name":"any"}]}],"fileChangeEvent":[{"__symbolic":"method"}],"imageCropped":[{"__symbolic":"method"}],"imageLoaded":[{"__symbolic":"method"}],"cropperReady":[{"__symbolic":"method"}],"loadImageFailed":[{"__symbolic":"method"}],"rotateLeft":[{"__symbolic":"method"}],"rotateRight":[{"__symbolic":"method"}],"flipAfterRotate":[{"__symbolic":"method"}],"flipHorizontal":[{"__symbolic":"method"}],"flipVertical":[{"__symbolic":"method"}],"resetImage":[{"__symbolic":"method"}],"zoomOut":[{"__symbolic":"method"}],"zoomIn":[{"__symbolic":"method"}],"toggleContainWithinAspectRatio":[{"__symbolic":"method"}],"updateRotation":[{"__symbolic":"method"}],"onNoClick":[{"__symbolic":"method"}],"validateFormBuilder":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"editProperty":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}]}}},"origins":{"FormBuilderComponent":"./lib/form-builder/form-builder.component","FormBuilderModule":"./lib/form-builder/form-builder.module","PreviewTemplateComponent":"./lib/preview-template/preview-template.component","PreviewTemplateModule":"./lib/preview-template/preview-template.module","ImageCropModule":"./lib/image-crop/image-crop.module","ImageCropComponent":"./lib/image-crop/image-crop.component","base64ToFile":"./lib/image-crop/utils/blob.utils","ɵa":"./lib/shared-components/json-preview-dialog/json-preview-dialog.component","ɵb":"./lib/material.module","ɵc":"./lib/basic-controls/controls/controls.module","ɵd":"./lib/basic-controls/controls/text-box/text-box.component","ɵe":"./lib/basic-controls/controls/text-area/text-area.component","ɵf":"./lib/basic-controls/controls/select/select.component","ɵg":"./lib/basic-controls/controls/multi-select/multi-select.component","ɵh":"./lib/basic-controls/controls/radio-button/radio-button.component","ɵi":"./lib/basic-controls/controls/datepicker/datepicker.component","ɵj":"./lib/basic-controls/controls/button/button.component","ɵk":"./lib/basic-controls/controls/autocomplete/autocomplete.component","ɵl":"./lib/basic-controls/controls/checkbox/checkbox.component","ɵm":"./lib/basic-controls/controls/slide-toggle/slide-toggle.component","ɵn":"./lib/basic-controls/controls/header/header.component","ɵo":"./lib/basic-controls/controls/paragraph/paragraph.component","ɵp":"./lib/basic-controls/controls/divider/divider.component","ɵq":"./lib/basic-controls/controls/image/image.component","ɵr":"./lib/basic-controls/edit-controls/edit-controls.module","ɵs":"./lib/basic-controls/edit-controls/edit-text-box/edit-text-box.component","ɵt":"./lib/basic-controls/edit-controls/edit-text-area/edit-text-area.component","ɵu":"./lib/basic-controls/edit-controls/edit-select/edit-select.component","ɵv":"./lib/basic-controls/edit-controls/edit-datepicker/edit-datepicker.component","ɵw":"./lib/basic-controls/edit-controls/edit-button/edit-button.component","ɵx":"./lib/shared-components/confirm-dialog/confirm-dialog.component","ɵy":"./lib/basic-controls/edit-controls/edit-slide-toggle/edit-slide-toggle.component","ɵz":"./lib/basic-controls/edit-controls/edit-header/edit-header.component","ɵba":"./lib/basic-controls/edit-controls/edit-paragraph/edit-paragraph.component","ɵbb":"./lib/basic-controls/edit-controls/image-upload-dialog/image-upload-dialog.component"},"importAs":"@asoftwareworld/form-builder"}